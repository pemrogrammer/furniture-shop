{"version":3,"sources":["../../src/services/auth.service.ts"],"sourcesContent":["import { compare, hash } from 'bcrypt';\r\nimport { sign } from 'jsonwebtoken';\r\nimport { SECRET_KEY } from '@config';\r\nimport DB from '@databases';\r\nimport { CreateUserDto } from '@dtos/users.dto';\r\nimport { HttpException } from '@exceptions/HttpException';\r\nimport { DataStoredInToken, TokenData } from '@interfaces/auth.interface';\r\nimport { User } from '@interfaces/users.interface';\r\nimport { isEmpty } from '@utils/util';\r\n\r\nclass AuthService {\r\n  public users = DB.Users;\r\n\r\n  public async signup(userData: CreateUserDto): Promise<User> {\r\n    if (isEmpty(userData)) throw new HttpException(400, \"You're not userData\");\r\n\r\n    const findUser: User = await this.users.findOne({ where: { email: userData.email } });\r\n    if (findUser) throw new HttpException(409, `You're email ${userData.email} already exists`);\r\n\r\n    const hashedPassword = await hash(userData.password, 10);\r\n    const createUserData: User = await this.users.create({ ...userData, password: hashedPassword });\r\n\r\n    return createUserData;\r\n  }\r\n\r\n  public async login(userData: CreateUserDto): Promise<{ cookie: string; findUser: User }> {\r\n    if (isEmpty(userData)) throw new HttpException(400, \"You're not userData\");\r\n\r\n    const findUser: User = await this.users.findOne({ where: { email: userData.email } });\r\n    if (!findUser) throw new HttpException(409, `You're email ${userData.email} not found`);\r\n\r\n    const isPasswordMatching: boolean = await compare(userData.password, findUser.password);\r\n    if (!isPasswordMatching) throw new HttpException(409, \"You're password not matching\");\r\n\r\n    const tokenData = this.createToken(findUser);\r\n    const cookie = this.createCookie(tokenData);\r\n\r\n    return { cookie, findUser };\r\n  }\r\n\r\n  public async logout(userData: User): Promise<User> {\r\n    if (isEmpty(userData)) throw new HttpException(400, \"You're not userData\");\r\n\r\n    const findUser: User = await this.users.findOne({ where: { email: userData.email, password: userData.password } });\r\n    if (!findUser) throw new HttpException(409, \"You're not user\");\r\n\r\n    return findUser;\r\n  }\r\n\r\n  public createToken(user: User): TokenData {\r\n    const dataStoredInToken: DataStoredInToken = { id: user.id };\r\n    const secretKey: string = SECRET_KEY;\r\n    const expiresIn: number = 60 * 60;\r\n\r\n    return { expiresIn, token: sign(dataStoredInToken, secretKey, { expiresIn }) };\r\n  }\r\n\r\n  public createCookie(tokenData: TokenData): string {\r\n    return `Authorization=${tokenData.token}; HttpOnly; Max-Age=${tokenData.expiresIn};`;\r\n  }\r\n}\r\n\r\nexport default AuthService;\r\n"],"names":["AuthService","signup","userData","isEmpty","HttpException","findUser","users","findOne","where","email","hashedPassword","hash","password","createUserData","create","login","isPasswordMatching","compare","tokenData","createToken","cookie","createCookie","logout","user","dataStoredInToken","id","secretKey","SECRET_KEY","expiresIn","token","sign","DB","Users"],"mappings":"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"}